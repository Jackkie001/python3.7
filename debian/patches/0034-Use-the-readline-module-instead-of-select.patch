From: Anthony Sottile <asottile@umich.edu>
Date: Sat, 10 Feb 2018 13:27:28 -0800
Subject: Use the readline module instead of select

The select module is built into the interpreter instead of being a .so file
---
 Lib/test/test_import/__init__.py | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/Lib/test/test_import/__init__.py b/Lib/test/test_import/__init__.py
index 049ee57..73e2b40 100644
--- a/Lib/test/test_import/__init__.py
+++ b/Lib/test/test_import/__init__.py
@@ -91,12 +91,12 @@ class ImportTests(unittest.TestCase):
         self.assertRegex(str(cm.exception), r"cannot import name 'i_dont_exist' from 'os' \(.*os.py\)")
 
     def test_from_import_missing_attr_has_name_and_so_path(self):
-        import select
+        import readline
         with self.assertRaises(ImportError) as cm:
-            from select import i_dont_exist
-        self.assertEqual(cm.exception.name, 'select')
-        self.assertEqual(cm.exception.path, select.__file__)
-        self.assertRegex(str(cm.exception), r"cannot import name 'i_dont_exist' from 'select' \(.*\.(so|pyd)\)")
+            from readline import i_dont_exist
+        self.assertEqual(cm.exception.name, 'readline')
+        self.assertEqual(cm.exception.path, readline.__file__)
+        self.assertRegex(str(cm.exception), r"cannot import name 'i_dont_exist' from 'readline' \(.*\.(so|pyd)\)")
 
     def test_from_import_missing_attr_has_name(self):
         with self.assertRaises(ImportError) as cm:
